name: Build Kokoro EN-only (FP32 & Q8)

on:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile: [fp32, q8]
    env:
      APP_DIR: android/SherpaOnnxTtsEngine
      ASSETS_DIR: android/SherpaOnnxTtsEngine/app/src/main/assets/model

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install Android SDK
        uses: android-actions/setup-android@v3

      - name: Install platform, build-tools, NDK, and CMake
        run: |
          sdkmanager --install \
            "platforms;android-34" \
            "build-tools;34.0.0" \
            "platform-tools" \
            "ndk;26.3.11579264" \
            "cmake;3.22.1"

      - name: Prepare English-only assets (voices/tokens/lexicons) from official EN APK
        run: |
          set -euxo pipefail
          mkdir -p "$ASSETS_DIR"
          curl -L "https://huggingface.co/csukuangfj/sherpa-onnx-apk/resolve/main/tts-engine-new/1.12.14/sherpa-onnx-1.12.14-arm64-v8a-en-tts-engine-kokoro-en-v0_19.apk" -o en.apk
          unzip -j en.apk "assets/model/*" -d "$ASSETS_DIR"
          ls -lah "$ASSETS_DIR"

      - name: Swap ONNX model (FP32 or Q8)
        run: |
          set -euxo pipefail
          cd "$ASSETS_DIR"
          rm -f model.onnx || true
          if [ "${{ matrix.profile }}" = "fp32" ]; then
            curl -L "https://huggingface.co/onnx-community/Kokoro-82M-v1.0-ONNX/resolve/main/onnx/model.onnx" -o model.onnx
          else
            curl -L "https://huggingface.co/onnx-community/Kokoro-82M-v1.0-ONNX/resolve/main/onnx/model_quantized.onnx" -o model.onnx
            # Prefer q8f16? Replace the line above with:
            # curl -L "https://huggingface.co/onnx-community/Kokoro-82M-v1.0-ONNX/resolve/main/onnx/model_q8f16.onnx" -o model.onnx
          fi
          ls -lh model.onnx
          # Defensive: normalize filenames if upstream renames them
          [ -f tokens.txt ] || mv tokens* tokens.txt 2>/dev/null || true
          [ -f voices.bin ] || mv voices* voices.bin 2>/dev/null || true

      - name: Make Gradle wrapper executable
        run: chmod +x $APP_DIR/gradlew

      - name: Assemble Release
        working-directory: ${{ env.APP_DIR }}
        run: ./gradlew --no-daemon assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: kokoro-en-${{ matrix.profile }}
          path: android/SherpaOnnxTtsEngine/app/build/outputs/apk/release/*.apk
