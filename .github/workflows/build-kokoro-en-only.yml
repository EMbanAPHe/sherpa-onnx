name: Build Kokoro EN-only (FP32 & Q8)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        profile: [fp32, q8]
    env:
      APP_DIR: android/SherpaOnnxTtsEngine
      ASSETS_DIR: android/SherpaOnnxTtsEngine/app/src/main/assets/model
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # One step installs SDK + accepts licenses non-interactively
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 12266719
          accept-android-sdk-licenses: true
          log-accepted-android-sdk-licenses: true
          packages: |
            platform-tools
            platforms;android-34
            build-tools;34.0.0
            ndk;26.3.11579264
            cmake;3.22.1

      - name: Download Kokoro model assets
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p "$ASSETS_DIR"
          cd "$ASSETS_DIR"

          if [ "${{ matrix.profile }}" = "fp32" ]; then
            MODEL_DIR="kokoro-en-v0_19"
            MODEL_URL="https://github.com/k2-fsa/sherpa-onnx/releases/download/tts-models/kokoro-en-v0_19.tar.bz2"
          else
            MODEL_DIR="kokoro-en-q8"
            MODEL_URL="https://github.com/k2-fsa/sherpa-onnx/releases/download/tts-models/kokoro-en-q8.tar.bz2"
          fi

          curl -fL --retry 3 --retry-delay 5 -o model.tar.bz2 "$MODEL_URL"
          tar -xjf model.tar.bz2
          rm -f model.tar.bz2

          # Ensure we have a standard filename for the model
          if [ ! -f "$MODEL_DIR/model.onnx" ]; then
            ONNX=$(ls "$MODEL_DIR"/*.onnx | head -n1 || true)
            if [ -n "$ONNX" ]; then mv "$ONNX" "$MODEL_DIR/model.onnx"; fi
          fi

          # Sanity checks
          test -f "$MODEL_DIR/model.onnx"
          test -f "$MODEL_DIR/voices.bin"
          # Kokoro EN ships espeak-ng-data; if not, the build should still proceed
          if [ -d "$MODEL_DIR/espeak-ng-data" ]; then
            echo "Found espeak-ng-data"
          else
            echo "WARNING: espeak-ng-data not found in $MODEL_DIR"
          fi

          # Show what we fetched
          find "$MODEL_DIR" -maxdepth 2 -type f -printf '%P\n' | sort

      - name: Make Gradle wrapper executable
        run: chmod +x ${{ env.APP_DIR }}/gradlew

      - name: Assemble Debug
        working-directory: ${{ env.APP_DIR }}
        env:
          ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/26.3.11579264
        run: ./gradlew --no-daemon assembleDebug

      - name: Show packaged assets (debug APK)
        shell: bash
        run: |
          set -eux
          APK="${{ env.APP_DIR }}/app/build/outputs/apk/debug/app-debug.apk"
          unzip -Z1 "$APK" | sed -n '/^assets\/model\//p' || true

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: kokoro-en-${{ matrix.profile }}-debug
          path: android/SherpaOnnxTtsEngine/app/build/outputs/apk/debug/app-debug.apk
